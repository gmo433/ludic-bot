name: CI/CD Pipeline for Telegram Bot

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: ludic-bot
  REGISTRY: docker.io/${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 1. Checkout code
      uses: actions/checkout@v4

    - name: 2. Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
      
    - name: 3. Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 4. Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        file: ./Dockerfile
        
    - name: 5. Decode and Setup Kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > /tmp/kubeconfig.yaml
        echo "KUBECONFIG=/tmp/kubeconfig.yaml" >> $GITHUB_ENV
      shell: bash

    - name: 6. Apply Kubernetes Secret for Telegram Token
      run: |
        kubectl create secret generic telegram-bot-secret \
          --from-literal=token="${{ secrets.TELEGRAM_BOT_TOKEN }}" \
          --dry-run=client -o yaml | kubectl apply -f -
      shell: bash

    - name: 6.1. Apply Kubernetes Secret for Football API Key
      # !!! НОВЫЙ ШАГ ДЛЯ КЛЮЧА API FOOTBALL !!!
      run: |
        kubectl create secret generic football-api-secret \
          --from-literal=key="${{ secrets.FOOTBALL_API_KEY }}" \
          --dry-run=client -o yaml | kubectl apply -f -
      shell: bash
          
    - name: 7. Deploy to Kubernetes (Create/Update Deployment)
      run: |
        # ВАШ ЛОГИН ROMAN3327
        sed -i "s|docker.io/roman3327/ludic-bot:latest|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}|g" k8s-deployment.yaml
        
        kubectl apply -f k8s-deployment.yaml
      shell: bash
