name: CI/CD Pipeline for Telegram Bot

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: ludic-bot
  # Registry: docker.io/gmo433/ludic-bot
  REGISTRY: docker.io/${{ secrets.DOCKERHUB_USERNAME }} # ИСПОЛЬЗУЕМ DOCKERHUB_USERNAME
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 1. Checkout code
      uses: actions/checkout@v4

    - name: 2. Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
      
    - name: 3. Login to Docker Hub
      uses: docker/login-action@v3
      with:
        # !!! ИСПОЛЬЗУЕМ ВАШЕ ИМЯ СЕКРЕТА !!!
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 4. Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        file: ./Dockerfile
    
    - name: 5. Setup Kubeconfig
      uses: azure/k8s-set-context@v4
      with:
        method: kubeconfig
        # !!! ИСПОЛЬЗУЕМ ВАШЕ ИМЯ СЕКРЕТА !!!
        kubeconfig: ${{ secrets.KUBECONFIG_B64 }}
        
    - name: 6. Apply Kubernetes Secret for Telegram Token
      # Создаем/обновляем Secret с токеном бота
      run: |
        kubectl create secret generic telegram-bot-secret \
          --from-literal=token="${{ secrets.TELEGRAM_BOT_TOKEN }}" \
          --dry-run=client -o yaml | kubectl apply -f -
          
    - name: 7. Deploy to Kubernetes
      uses: azure/k8s-deploy@v4
      with:
        manifests: |
          k8s-deployment.yaml
        # Обновляем Deployment новым образом
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        action: deploy
