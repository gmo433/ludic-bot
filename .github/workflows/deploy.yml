# .github/workflows/deploy.yml
name: CI/CD to Kubernetes

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    env:
      DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/ludic-bot
      TAG: ${{ github.sha }}
      K8S_DEPLOYMENT_NAME: ludic-bot-deployment

    steps:
    - name: 1. Checkout Code
      uses: actions/checkout@v4
      
    # =======================================================
    # СЕКЦИЯ DOCKER (Сборка и Пуш)
    # =======================================================
    - name: 2. Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 3. Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 4. Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ env.TAG }}
        file: ./Dockerfile
        
    # =======================================================
    # СЕКЦИЯ KUBERNETES (Деплой)
    # =======================================================
    - name: 5. Set up Kubeconfig
      run: |
        # Исправление: Сначала создаем каталог $HOME/.kube
        mkdir -p $HOME/.kube
        
        # Декодируем и записываем содержимое секрета KUBECONFIG_B64
        echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > $HOME/.kube/config
        
    - name: 6. Install kubectl
      uses: azure/setup-kubectl@v3
      
    - name: 7. Deploy to K8s
      run: |
        # Применяем манифест. 
        kubectl apply -f deployment.yaml

        # Обновляем образ в Deployment до нового уникального тега (SHA)
        kubectl set image deployment/${{ env.K8S_DEPLOYMENT_NAME }} ludic-bot=${{ env.DOCKER_IMAGE }}:${{ env.TAG }}
        
        # Ожидаем завершения развертывания
        kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT_NAME }}
