deploy:
  name: Deploy to Kubernetes
  runs-on: ubuntu-latest
  needs: build-and-push # Запускается только после успешного создания и пуша образа
  
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    # Установим утилиту envsubst, необходимую для безопасной подстановки секретов
    - name: Install Gettext (for envsubst)
      run: sudo apt-get update && sudo apt-get install -y gettext-base

    # 1. Настройка Kubeconfig (для аутентификации в вашем кластере)
    - name: Set up Kubeconfig
      run: |
        # Декодируем base64 KUBECONFIG из секрета
        echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > /tmp/kubeconfig
        echo "KUBECONFIG=/tmp/kubeconfig" >> $GITHUB_ENV # Устанавливаем переменную окружения
        
    # 2. Установка kubectl
    - name: Install Kubectl
      uses: azure/setup-kubectl@v3

    # 3. Применение манифестов с безопасной подстановкой секретов и имени образа
    - name: Apply Kubernetes Manifests
      env:
        # Передаем реальные секреты в переменные окружения для envsubst
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
        
        # КРИТИЧЕСКИ ВАЖНО: Определяем переменную IMAGE_PATH для подстановки в deployment.yaml
        IMAGE_PATH: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
      run: |
        echo "Starting K8s deployment..."

        # 1. Подставляем секреты в secret.yaml
        envsubst < kubernetes/secret.yaml | kubectl apply -f -
        
        # 2. Подставляем путь к образу в deployment.yaml и применяем его
        envsubst < kubernetes/deployment.yaml | kubectl apply -f -
        
        # Ожидаем завершения деплоя
        kubectl rollout status deployment/football-bot-deployment --timeout=5m
        echo "Deployment successful! Bot is running in Kubernetes."
